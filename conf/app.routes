# microservice specific routes

GET        /knowledge-intensive/check-ki-costs/operating-costs/:operatingCosts1stYear/:operatingCosts2ndYear/:operatingCosts3rdYear/rd-costs/:rAndDCosts1stYear/:rAndDCosts2ndYear/:rAndDCosts3rdYear                                                                              controllers.KnowledgeIntensiveController.checkKICosts(operatingCosts1stYear: Int,operatingCosts2ndYear: Int,operatingCosts3rdYear: Int,rAndDCosts1stYear:Int, rAndDCosts2ndYear:Int, rAndDCosts3rdYear:Int)

GET        /knowledge-intensive/check-secondary-conditions/has-percentage-with-masters/:hasPercentageWithMasters/has-ten-year-plan/:hasTenYearPlan                                                                                                                                 controllers.KnowledgeIntensiveController.checkSecondaryConditions(hasPercentageWithMasters: Boolean, hasTenYearPlan: Boolean)

GET        /lifetime-allowance/lifetime-allowance-checker/had-previous-rfi/:hadPrevRFI/is-knowledge-intensive/:isKi/previous-schemes-total/:previousInvestmentSchemesTotal/proposed-amount/:proposedAmount                                                                         controllers.LifetimeAllowanceController.checkLifetimeAllowanceExceeded(hadPrevRFI: Boolean, isKi: Boolean, previousInvestmentSchemesTotal: Int, proposedAmount: Int)

GET        /averaged-annual-turnover/check-averaged-annual-turnover/proposed-investment-amount/:proposedInvestmentAmount/annual-turn-over/:annualTurnOver1stYear/:annualTurnOver2ndYear/:annualTurnOver3rdYear/:annualTurnOver4thYear/:annualTurnOver5thYear                       controllers.AveragedAnnualTurnoverController.checkAveragedAnnualTurnover(proposedInvestmentAmount: Int, annualTurnOver1stYear: Int, annualTurnOver2ndYear: Int, annualTurnOver3rdYear: Int, annualTurnOver4thYear:Int, annualTurnOver5thYear:Int)

GET        /seis/previous-investments-checker/investments-since-trade-start-date/:investmentsTotalSinceStartDate/is-total-exceeded                                                                                                                                                 controllers.SeisAllowanceController.checkSeisAllowanceExceeded(investmentsTotalSinceStartDate: Int)

POST       /advanced-assurance/:tavcReferenceId/submit                                                                                                                                                                                                                             controllers.SubmissionController.submitAA(tavcReferenceId: String)

GET        /advanced-assurance/:tavcReferenceId/submission-details                                                                                                                                                                                                                 controllers.SubmissionController.getAASubmissionDetails(tavcReferenceId: String)

GET        /registration/registration-details/safeid/:safeID                                                                                                                                                                                                                       controllers.RegistrationDetailsController.getRegistrationDetails(safeID: String)

GET        /market-criteria/new-geographical/:newGeographical/new-product/:newProduct                                                                                                                                                                                              controllers.MarketCriteriaController.checkMarketCriteria(newGeographical: Boolean, newProduct: Boolean)

GET        /trade-start-date/validate-trade-start-date/trade-start-day/:tradeStartDay/trade-start-month/:tradeStartMonth/trade-start-year/:tradeStartYear                                                                                                                          controllers.TradeStartDateController.validateTradeStartDate(tradeStartDay: Int, tradeStartMonth: Int, tradeStartYear: Int)

GET        /gross-assets/gross-assets-checker/check-total/grsoss-amount/:schemeType/:grossAmount                                                                                                                                                                                    controllers.GrossAssetsController.checkGrossAssetsExceeded(schemeType: String, grossAmount: Int)

GET        /throttle/check-user-access                                                                                                                                                                                                                                             controllers.ThrottleController.checkUserAccess()

POST       /token/generate-temporary-token                                                                                                                                                                                                                                         controllers.TokenController.generateTemporaryToken()

GET        /token/validate-temporary-token/:id                                                                                                                                                                                                                                     controllers.TokenController.validateTemporaryToken(id: String)

#########Compliance Statement###########
GET        /compliance-statement/full-time-equivalence-check/:schemeType/:numberOfFullTimeEquivalentEmployees                                                                                                                                                                      controllers.EmployeeFullTimeEquivalentController.checkFullTimeEquivalence(schemeType: String, numberOfFullTimeEquivalentEmployees: String)

GET        /compliance-statement/has-investment-trade-started/validate-has-investment-trade-started/day/:hasInvestmentTradeStartedDay/month/:hasInvestmentTradeStartedMonth/year/:hasInvestmentTradeStartedYear                                                                    controllers.HasInvestmentTradeStartedController.validateHasInvestmentTradeStarted(hasInvestmentTradeStartedDay: Int, hasInvestmentTradeStartedMonth: Int, hasInvestmentTradeStartedYear: Int)

POST       /compliance-statement/:tavcReferenceId/submit                                                                                                                                                                                                                           controllers.SubmissionController.submitCS(tavcReferenceId: String)

GET        /submission-period/submission-period-checker/trade-start-date/:tradeStartDay/:tradeStartMonth/:tradeStartYear/share-issue-date/:shareIssueDay/:shareIssueMonth/:shareIssueYear                                                                                          controllers.SubmissionPeriodController.submissionPeriodCheck(tradeStartDay: Int, tradeStartMonth: Int, tradeStartYear: Int, shareIssueDay: Int, shareIssueMonth: Int, shareIssueYear: Int)